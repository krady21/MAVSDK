language: cpp

matrix:
  fast_finish: true
  include:
    - os: linux
      name: "ubuntu 16.04"
      dist: xenial
      compiler: gcc
      env:
      - MATRIX_EVAL="BUILD_TARGET=gcc_build"
    - os: linux
      name: "ubuntu 16.04 - gcc 5"
      dist: xenial
      compiler: gcc
      env:
      - MATRIX_EVAL="BUILD_TARGET=gcc_build && CC=gcc-5 && CXX=g++-5"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-5
            - g++-5
    - os: linux
      name: "ubuntu 16.04 - gcc 6"
      dist: xenial
      sudo: false
      compiler: gcc
      env:
      - MATRIX_EVAL="BUILD_TARGET=coverage_build && CC=gcc-6 && CXX=g++-6"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-6
            - g++-6
    - os: linux
      name: "ubuntu 16.04"
      services:
        - docker
      env:
      - MATRIX_EVAL="BUILD_TARGET=docker_build_ubuntu_16.04"
    - os: linux
      name: "ubuntu 18.04"
      sudo: true
      services:
        - docker
      env:
      - MATRIX_EVAL="BUILD_TARGET=docker_build_ubuntu_18.04"
    - os: linux
      name: "fedora 28"
      sudo: true
      services:
        - docker
      env:
      - MATRIX_EVAL="BUILD_TARGET=docker_build_fedora_28"
    - os: linux
      name: "fedora 29"
      sudo: true
      services:
        - docker
      env:
      - MATRIX_EVAL="BUILD_TARGET=docker_build_fedora_29"
    - os: linux
      name: "manylinux1-x64"
      services:
        - docker
      env:
      - MATRIX_EVAL="BUILD_TARGET=manylinux1-x64"
    - os: osx
      name: "macOS"
      osx_image: xcode10.1
      env:
      - MATRIX_EVAL="BUILD_TARGET=osx_build"
    - os: osx
      name: "iOS"
      osx_image: xcode10.1
      env:
      - MATRIX_EVAL="BUILD_TARGET=ios_build"
    - os: osx
      name: "iOS Simulator"
      osx_image: xcode10.1
      env:
      - MATRIX_EVAL="BUILD_TARGET=ios_simulator_build"
    - os: windows
      name: "windows"
      env:
      - MATRIX_EVAL="BUILD_TARGET=windows"

before_install:
- eval "${MATRIX_EVAL}"
- if [[ "${BUILD_TARGET}" = "manylinux1-x64" ]]; then
    docker build -t manylinux1-x64-custom -f docker/Dockerfile.manylinux1-x64-custom .;
  fi

install:
- set -e
- if [[ "${BUILD_TARGET}" = "docker_build_ubuntu_16.04" ]]; then
    docker pull dronecode/dronecode-sdk-ubuntu-16.04;
  fi
- if [[ "${BUILD_TARGET}" = "docker_build_ubuntu_18.04" ]]; then
    docker pull dronecode/dronecode-sdk-ubuntu-18.04;
  fi
- if [[ "${BUILD_TARGET}" = "docker_build_fedora_28" ]]; then
    docker pull dronecode/dronecode-sdk-fedora-28;
  fi
- if [[ "${BUILD_TARGET}" = "docker_build_fedora_29" ]]; then
    docker pull dronecode/dronecode-sdk-fedora-29;
  fi
- if [[ "${BUILD_TARGET}" = "coverage_build" ]]; then
    pip install --user cpp-coveralls;
  fi
- if [[ "${BUILD_TARGET}" = "manylinux1-x64" ]]; then
    docker run --rm manylinux1-x64-custom > ./dockcross-manylinux1-x64;
    chmod +x ./dockcross-manylinux1-x64;
  fi

script:
- set -e
- if [[ "${BUILD_TARGET}" = "gcc_build" ]]; then
    cmake -DCMAKE_BUILD_TYPE=Debug -Bbuild/debug -H.;
    cmake --build build/debug;
    ./build/debug/src/unit_tests_runner;
    cmake -DCMAKE_BUILD_TYPE=Release -Bbuild/release -H.;
    cmake --build build/release;
    ./build/release/src/unit_tests_runner;
  fi
- if [[ "${BUILD_TARGET}" = "coverage_build" ]]; then
    cmake -DCMAKE_BUILD_TYPE=Coverage -Bbuild -H.;
    cmake --build build;
    ./build/src/unit_tests_runner;
  fi
- if [[ "${BUILD_TARGET}" = "docker_build_ubuntu_16.04" ]]; then
    docker run -it --rm -v $TRAVIS_BUILD_DIR:/home/user/DronecodeSDK:rw -e LOCAL_USER_ID=`id -u` dronecode/dronecode-sdk-ubuntu-16.04 ./tools/travis-docker-build.sh;
  fi
- if [[ "${BUILD_TARGET}" = "docker_build_ubuntu_18.04" ]]; then
    docker run -it --rm -v $TRAVIS_BUILD_DIR:/home/user/DronecodeSDK:rw -e LOCAL_USER_ID=`id -u` dronecode/dronecode-sdk-ubuntu-18.04 ./tools/travis-docker-build.sh;
  fi
- if [[ "${BUILD_TARGET}" = "docker_build_fedora_28" ]]; then
    docker run -it --rm -v $TRAVIS_BUILD_DIR:/home/user/DronecodeSDK:rw -e LOCAL_USER_ID=`id -u` dronecode/dronecode-sdk-fedora-28 ./tools/travis-docker-build.sh;
  fi
- if [[ "${BUILD_TARGET}" = "docker_build_fedora_29" ]]; then
    docker run -it --rm -v $TRAVIS_BUILD_DIR:/home/user/DronecodeSDK:rw -e LOCAL_USER_ID=`id -u` dronecode/dronecode-sdk-fedora-29 ./tools/travis-docker-build.sh;
  fi
- if [[ "${BUILD_TARGET}" = "manylinux1-x64" ]]; then
    ./dockcross-manylinux1-x64 cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=build/manylinux1-x64/install -DBUILD_BACKEND=ON -DBUILD_SHARED_LIBS=OFF -DMANYLINUX=TRUE -Bbuild/manylinux1-x64 -H.;
    ./dockcross-manylinux1-x64 cmake --build build/manylinux1-x64 --target install;
  fi
- if [[ "${BUILD_TARGET}" = "osx_build" ]]; then
    cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=build/release/install -DBUILD_BACKEND=ON -DBUILD_SHARED_LIBS=OFF -Bbuild/release -H.;
    make -Cbuild/release install -j4;
    ./build/release/src/unit_tests_runner;
    ./build/release/src/backend/test/unit_tests_backend;
  fi
- if [[ "${BUILD_TARGET}" = "ios_build" ]]; then
    cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_BACKEND=ON -DBUILD_SHARED_LIBS=OFF -Bbuild/default -H.;
    make -Cbuild/default -j4;
    cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=./tools/ios.toolchain.cmake -DPLATFORM=OS -DBUILD_BACKEND=ON -DBUILD_SHARED_LIBS=OFF -Bbuild/ios -H.;
    make -Cbuild/ios -j4;
  fi
- if [[ "${BUILD_TARGET}" = "ios_simulator_build" ]]; then
    cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_BACKEND=ON -DBUILD_SHARED_LIBS=OFF -Bbuild/default -H.;
    make -Cbuild/default -j4;
    cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=./tools/ios.toolchain.cmake -DPLATFORM=SIMULATOR64 -DBUILD_BACKEND=ON -DBUILD_SHARED_LIBS=OFF -Bbuild/ios_simulator -H.;
    make -Cbuild/ios_simulator -j4;
  fi
- if [[ "${BUILD_TARGET}" = "windows" ]]; then
    cmake -G "Visual Studio 15 2017" -DCMAKE_INSTALL_PREFIX=${TRAVIS_BUILD_DIR}/build/debug/install -DBUILD_BACKEND=ON -DBUILD_SHARED_LIBS=OFF -Bbuild/debug -H${TRAVIS_BUILD_DIR};
  fi

after_success:
- if [[ "${BUILD_TARGET}" = "coverage_build" ]]; then
  coveralls --root . --build-root build
    --exclude=libs --exclude="plugins"
    --exclude="/usr/include/"
    --exclude="core/external/curl-android-ios"
    --exclude="core/libs/tinyxml2"
    --exclude="debug_helpers"
    --exclude="example"
    --exclude="external_example"
    --exclude-pattern=".*CMakeFiles.*"
    --exclude-pattern=".*_test.*";
  fi

before_deploy:
- if ! [ "$BEFORE_DEPLOY_RUN" ]; then
      export BEFORE_DEPLOY_RUN=1;

      if [[ "${BUILD_TARGET}" = "manylinux1-x64" ]]; then
          mv build/manylinux1-x64/install/bin/mavsdk_server build/manylinux1-x64/install/bin/mavsdk_server_manylinux1-x64;
      fi;
      if [[ "${BUILD_TARGET}" = "osx_build" ]]; then
          mv build/release/install/bin/mavsdk_server build/release/install/bin/mavsdk_server_macos;
      fi;
  fi

deploy:
- provider: releases
  skip_cleanup: true
  api_key:
      secure: hBX3pFWNZiDbz4yKnOjhLg3QS9Ubn1XePxSeIt2Btq5GzbomOPDCgpIFijBppliwj9oKc302EMnZSg2QWeAzFKn9UnmIflJ0E4iymYgwWdTJv+bSnYALJEmO8F6gF9FgRlPk8FCtZiECoTsa75w5TrEZKZpFpmzVYRiDu0eo6sEjW7UJPC0A2KSTXLrBCHSIZy/iasbGmuur4brG7NO0QdMOvDXvhsYfkXDRJFMTtTHvLiKJcqiunPfqARzf1H4x4iczRYscKu5Vn8Kmw3NANGkcIDvEj4ooih831EXxACRZw0VgycgNHOKRXKC9pZ4hLQMon+jxpQX+X8k/K5161oEkF/gCVKyFb31Pk/4Uwe81p1GJY2lAC7MDUxA98RKXhdvVYF2Cp44+IbF0YVoWRUtVAhknXRQ3Weg25kyVSu83q2nN2nZq2qGTnpNIbdN56s/F+uaFtipGEh+vmiv8rNUz+Z5MFrY2FQaSvBTFw9K4tNs9uc+VQd1bE7X5wh0yywEqUEw2nzqTB2xR+OubygUASbk2GLNdc254P0lrzCHbNM62Y7sRX06CM7hPlwhELEkVtUXZWJ0KuhQyLvRh3aPJ3Jj30EswTt/FGT1gzSP1FjjHBRZCK4P2D2rwJ5TMn2JrZKfPxmEd3kVmn6h80+gBbKgonGmZspd2SvPEI5g=
  file_glob: true
  file: "build/manylinux1-x64/install/bin/mavsdk_server_manylinux1-x64"
  on:
    condition: ${BUILD_TARGET} = manylinux1-x64
    repo: mavlink/MAVSDK
    tags: true
- provider: releases
  skip_cleanup: true
  api_key:
      secure: hBX3pFWNZiDbz4yKnOjhLg3QS9Ubn1XePxSeIt2Btq5GzbomOPDCgpIFijBppliwj9oKc302EMnZSg2QWeAzFKn9UnmIflJ0E4iymYgwWdTJv+bSnYALJEmO8F6gF9FgRlPk8FCtZiECoTsa75w5TrEZKZpFpmzVYRiDu0eo6sEjW7UJPC0A2KSTXLrBCHSIZy/iasbGmuur4brG7NO0QdMOvDXvhsYfkXDRJFMTtTHvLiKJcqiunPfqARzf1H4x4iczRYscKu5Vn8Kmw3NANGkcIDvEj4ooih831EXxACRZw0VgycgNHOKRXKC9pZ4hLQMon+jxpQX+X8k/K5161oEkF/gCVKyFb31Pk/4Uwe81p1GJY2lAC7MDUxA98RKXhdvVYF2Cp44+IbF0YVoWRUtVAhknXRQ3Weg25kyVSu83q2nN2nZq2qGTnpNIbdN56s/F+uaFtipGEh+vmiv8rNUz+Z5MFrY2FQaSvBTFw9K4tNs9uc+VQd1bE7X5wh0yywEqUEw2nzqTB2xR+OubygUASbk2GLNdc254P0lrzCHbNM62Y7sRX06CM7hPlwhELEkVtUXZWJ0KuhQyLvRh3aPJ3Jj30EswTt/FGT1gzSP1FjjHBRZCK4P2D2rwJ5TMn2JrZKfPxmEd3kVmn6h80+gBbKgonGmZspd2SvPEI5g=
  file_glob: true
  file: "build/release/install/bin/mavsdk_server_macos"
  on:
    condition: ${BUILD_TARGET} = osx_build
    repo: mavlink/MAVSDK
    tags: true
- provider: releases
  skip_cleanup: true
  api_key:
      secure: hBX3pFWNZiDbz4yKnOjhLg3QS9Ubn1XePxSeIt2Btq5GzbomOPDCgpIFijBppliwj9oKc302EMnZSg2QWeAzFKn9UnmIflJ0E4iymYgwWdTJv+bSnYALJEmO8F6gF9FgRlPk8FCtZiECoTsa75w5TrEZKZpFpmzVYRiDu0eo6sEjW7UJPC0A2KSTXLrBCHSIZy/iasbGmuur4brG7NO0QdMOvDXvhsYfkXDRJFMTtTHvLiKJcqiunPfqARzf1H4x4iczRYscKu5Vn8Kmw3NANGkcIDvEj4ooih831EXxACRZw0VgycgNHOKRXKC9pZ4hLQMon+jxpQX+X8k/K5161oEkF/gCVKyFb31Pk/4Uwe81p1GJY2lAC7MDUxA98RKXhdvVYF2Cp44+IbF0YVoWRUtVAhknXRQ3Weg25kyVSu83q2nN2nZq2qGTnpNIbdN56s/F+uaFtipGEh+vmiv8rNUz+Z5MFrY2FQaSvBTFw9K4tNs9uc+VQd1bE7X5wh0yywEqUEw2nzqTB2xR+OubygUASbk2GLNdc254P0lrzCHbNM62Y7sRX06CM7hPlwhELEkVtUXZWJ0KuhQyLvRh3aPJ3Jj30EswTt/FGT1gzSP1FjjHBRZCK4P2D2rwJ5TMn2JrZKfPxmEd3kVmn6h80+gBbKgonGmZspd2SvPEI5g=
  file_glob: true
  file:
  - "build/release/*.deb"
  - "build/release/*.rpm"
  on:
    repo: mavlink/MAVSDK
    tags: true
env:
  global:
  - secure: XifWUJ9By+R5snSRycmNc24yFJ4g4crAPPotHHnChZg3qSR+vvQEYwsprvy1rodKbs8Q6im8DIJzqn1+IQo3ygeh0Lb/OaqpoJbCvXVi2ejLNOWrTBdnO6enJI3pzFgcO6Kav4uvU8rZCenH6EwbZ3IW2ttq6THBxtBEiwCgGE4Msl3BtRmRlkhYohU2Mx8SyuPqsITsA4OS6y/gWI/hBWJRgCgx9SBzRSktYB5Uw7gEZC7Ysd0ao6jYcweIWHyCKEr2X2REZY5LIUtnpMCw92u+ALUf9y53vBrUdUX8miWNPrsIlKSUXzdUKiGE6GhZh4of28ile66LK229aKbJKWlUcUw6lCl4WdD7e+FxdnqOkXdYDy/xElsvUjNwa6rr4jfi7azdAYRv8gItJLKTtIyE6y5lJT6P4Katt4AxcOSMhsvqmjRZAMCzCNj5h6TULRps+pppeawKf5j8o1Q0tHPSm6BXhSy1gmIsxJcYcxESxi7auMeXvQ/mW9AfBjmd8iIxI6qi8uxyzXEtGFRKeW+rXBhqkdln+l52faAUW8vMAopgi/8eC+eARomQGoiqTTdWPiyTZjVrExMPRrXK1rr2rxOa9vKN9SbBw0HygsJ32KD0M0S5OgK69vhtgAkZROJMByWVMki/Zjq82TItpX2/u2LO/l8DP6xaWmdNdu4=
